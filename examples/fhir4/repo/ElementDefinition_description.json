[
  {
    "@id": "http://hl7.org/fhir/ElementDefinition/description",
    "@type": [
      "https://lschema.org/Overlay"
    ],
    "https://lschema.org/layer": [
      {
        "@id": "http://hl7.org/fhir/ElementDefinition",
        "@type": [
          "https://lschema.org/Object",
          "http://hl7.org/fhir/ElementDefinition"
        ],
        "https://lschema.org/Object/attributes": [
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternUrl",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternUnsignedInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueDecimal",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#meaningWhenMissing",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxLength",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A whole number"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternPositiveInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#alias",
            "@type": [
              "https://lschema.org/Array"
            ],
            "https://lschema.org/Array/elements": [
              {
                "@id": "http://hl7.org/fhir/ElementDefinition#alias.*",
                "@type": [
                  "https://lschema.org/Value"
                ],
                "https://lschema.org/description": [
                  {
                    "@value": "A sequence of Unicode characters"
                  }
                ]
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueMarkdown",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#definition",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValuePositiveInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#min",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "An integer with a value that is not negative (e.g. \u003e= 0)"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#comment",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#id",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueBoolean",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternBoolean",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueUnsignedInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternId",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#sliceIsConstraining",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Value of \"true\" or \"false\""
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueId",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueOid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedBase64Binary",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedString",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedUrl",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueDate",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueDate",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueBase64Binary",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueDateTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#short",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#isSummary",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Value of \"true\" or \"false\""
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedOid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueDateTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternCode",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternBase64Binary",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#sliceName",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternOid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedUnsignedInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternUri",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternDateTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueUnsignedInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedDecimal",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternMarkdown",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedUuid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedDate",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueCode",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValuePositiveInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedBoolean",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueInstant",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#isModifierReason",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#isModifier",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Value of \"true\" or \"false\""
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueDecimal",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedCanonical",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternUuid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternDecimal",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedCode",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#requirements",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueDate",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueInteger",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueDateTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueInteger",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternDate",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#maxValueInstant",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#contentReference",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "String of characters used to identify a name or a resource"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedMarkdown",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueUri",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedInstant",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueInstant",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternInstant",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#mustSupport",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Value of \"true\" or \"false\""
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedPositiveInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueUuid",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueCanonical",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternInteger",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueUnsignedInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#max",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedDateTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternString",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#orderMeaning",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueString",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#label",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#path",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "A sequence of Unicode characters"
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueInteger",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValuePositiveInt",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#minValueTime",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueUrl",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedInteger",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#defaultValueDecimal",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedId",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#patternCanonical",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value."
              }
            ]
          },
          {
            "@id": "http://hl7.org/fhir/ElementDefinition#fixedUri",
            "@type": [
              "https://lschema.org/Value"
            ],
            "https://lschema.org/description": [
              {
                "@value": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
              }
            ]
          }
        ]
      }
    ],
    "https://lschema.org/targetType": [
      {
        "@id": "http://hl7.org/fhir/ElementDefinition"
      }
    ]
  }
]